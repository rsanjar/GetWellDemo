// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace GetWell.Data.Model
{
    [Table("Clinic")]
    [Index("Name", "ParentDepartmentID", Name = "IX_Clinic", IsUnique = true)]
    [Index("UniqueKey", Name = "IX_Clinic_UniqueKey", IsUnique = true)]
    public partial class Clinic
    {
        public Clinic()
        {
            ClinicDoctors = new HashSet<ClinicDoctor>();
            ClinicGalleries = new HashSet<ClinicGallery>();
            ClinicPhones = new HashSet<ClinicPhone>();
            ClinicReviews = new HashSet<ClinicReview>();
            ClinicWorkDays = new HashSet<ClinicWorkDay>();
            InverseParentDepartment = new HashSet<Clinic>();
            PatientFavoriteClinics = new HashSet<PatientFavoriteClinic>();
        }

        [Key]
        public int ID { get; set; }
        [Required]
        [StringLength(100)]
        [Unicode(false)]
        public string Name { get; set; }
        [StringLength(100)]
        [Unicode(false)]
        public string Website { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string District { get; set; }
        [Required]
        [StringLength(50)]
        [Unicode(false)]
        public string Street { get; set; }
        [Required]
        [StringLength(100)]
        [Unicode(false)]
        public string Address { get; set; }
        [StringLength(200)]
        [Unicode(false)]
        public string NearBy { get; set; }
        public double Latitude { get; set; }
        public double Longitude { get; set; }
        public int RegionID { get; set; }
        public int? Floor { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string NearestSubway { get; set; }
        [Required]
        public bool? IsPrivate { get; set; }
        public int? ParentDepartmentID { get; set; }
        [StringLength(100)]
        [Unicode(false)]
        public string NameUz { get; set; }
        [StringLength(100)]
        [Unicode(false)]
        public string NameEn { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string DistrictUz { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string StreetUz { get; set; }
        [StringLength(100)]
        [Unicode(false)]
        public string AddressUz { get; set; }
        [StringLength(200)]
        [Unicode(false)]
        public string NearByUz { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string NearestSubwayUz { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string DistrictEn { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string StreetEn { get; set; }
        [StringLength(100)]
        [Unicode(false)]
        public string AddressEn { get; set; }
        [StringLength(200)]
        [Unicode(false)]
        public string NearByEn { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string NearestSubwayEn { get; set; }
        [Unicode(false)]
        public string DescriptionUz { get; set; }
        [Unicode(false)]
        public string DescriptionEn { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime DateCreated { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? DateUpdated { get; set; }
        public bool IsFeatured { get; set; }
        [StringLength(500)]
        [Unicode(false)]
        public string LogoUrl { get; set; }
        [StringLength(500)]
        [Unicode(false)]
        public string ThumbnailUrl { get; set; }
        [Unicode(false)]
        public string Description { get; set; }
        public Guid UniqueKey { get; set; }
        [Unicode(false)]
        public string QrImageCode { get; set; }
        public int DiscountPercentage { get; set; }
        [Column(TypeName = "date")]
        public DateTime? BusinessStartDate { get; set; }
        [Column(TypeName = "date")]
        public DateTime? BusinessEndDate { get; set; }
        [Required]
        public bool? IsActive { get; set; }

        public int SortOrder { get; set; }

        [ForeignKey("ParentDepartmentID")]
        [InverseProperty("InverseParentDepartment")]
        public virtual Clinic ParentDepartment { get; set; }
        [ForeignKey("RegionID")]
        [InverseProperty("Clinics")]
        public virtual Region Region { get; set; }
        [InverseProperty("Clinic")]
        public virtual ClinicAccount ClinicAccount { get; set; }
        [InverseProperty("Clinic")]
        public virtual ICollection<ClinicDoctor> ClinicDoctors { get; set; }
        [InverseProperty("Clinic")]
        public virtual ICollection<ClinicGallery> ClinicGalleries { get; set; }
        [InverseProperty("Clinic")]
        public virtual ICollection<ClinicPhone> ClinicPhones { get; set; }
        [InverseProperty("Clinic")]
        public virtual ICollection<ClinicReview> ClinicReviews { get; set; }
        [InverseProperty("Clinic")]
        public virtual ICollection<ClinicWorkDay> ClinicWorkDays { get; set; }
        [InverseProperty("ParentDepartment")]
        public virtual ICollection<Clinic> InverseParentDepartment { get; set; }
        [InverseProperty("Clinic")]
        public virtual ICollection<PatientFavoriteClinic> PatientFavoriteClinics { get; set; }
    }
}